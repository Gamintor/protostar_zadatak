{"version":3,"sources":["Components/CommentSection/CommentSection.js","Components/SinglePost/SinglePost.js","Components/Toolbar/Toolbar.js","Pages/HomePage.js","Pages/SinglePagePost/SinglePagePost.js","App.js","index.js"],"names":["CommentSection","comments","propsMessage","useEffect","console","log","className","id","length","map","com","name","email","body","SinglePost","title","user","to","target","rel","Toolbar","setPosts","useState","selectedID","setSelectedID","searchTerm","setSearchTerm","initalRender","useRef","fetchPostByID","a","fetch","then","response","json","data","error","fetchPostByTerm","isNaN","filter","post","toLowerCase","includes","current","type","size","minLength","autoComplete","placeholder","onChange","event","value","onClick","icon","faSearch","htmlFor","HomePage","posts","setComments","users","setUsers","fetchPosts","fetchComments","fetchUsers","e","comms","postId","userId","SinglePagePost","setPost","comment","setComment","setUser","useParams","fetchPost","fetchComment","fetchUser","Math","ceil","App","path","element","replace","ReactDOM","render","basename","process","document","getElementById"],"mappings":"sUAwCeA,EApCQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAMhC,OALAC,qBAAU,WACNC,QAAQC,IAAR,UAAeH,EAAf,sBAED,IAGC,sBAAKI,UAAU,WAAf,UACI,oBAAIC,GAAG,kBAAP,uBACCN,EAASO,QACNP,EAASQ,KAAI,SAAAC,GACT,OACI,sBAAKH,GAAG,UAAR,UACI,oBAAIA,GAAG,UAAP,SAAkBG,EAAIC,OACtB,sBAAMJ,GAAG,WAAT,SAAqBG,EAAIE,QACzB,mBAAGL,GAAG,UAAN,SAAiBG,EAAIG,SAHFH,EAAIH,WCkCpCO,G,MA5CI,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,MAAOF,EAA6C,EAA7CA,KAAMZ,EAAuC,EAAvCA,SAAUM,EAA6B,EAA7BA,GAAIS,EAAyB,EAAzBA,KAAMd,EAAmB,EAAnBA,aAMnD,OALAC,qBAAU,WACNC,QAAQC,IAAR,UAAeH,EAAf,kBAED,IAGC,eAAC,IAAD,CAAMe,GAAE,gBAAWV,GAAMW,OAAO,SAASC,IAAI,sBAAsBb,UAAU,aAA7E,UACI,oBAAIC,GAAG,QAAP,SAAgBQ,IAChB,sBAAMR,GAAG,OAAT,SAAiBM,IACjB,sBAAMN,GAAG,WAAT,mBAAqBS,EAAK,UAA1B,aAAqB,EAASL,OAC9B,cAAC,EAAD,CAAgBV,SAAUA,EAAUC,aAAcA,S,gBCsE/CkB,G,MAjFC,SAAC,GAAgC,IAA9BlB,EAA6B,EAA7BA,aAAcmB,EAAe,EAAfA,SAC7B,EAAoCC,mBAAS,OAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAeC,kBAAO,GAEtBC,EAAa,uCAAG,4BAAAC,EAAA,+EAEKC,MAAM,6CAAD,OAA6D,QAAfR,EAAA,kBAAkCA,GAAe,KAAMS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFzI,OAERC,EAFQ,OAGdd,EAASc,GAHK,gDAKd/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBANE,yDAAH,qDAUbgC,EAAe,uCAAG,8BAAAP,EAAA,yDACfQ,MAAMf,GADS,0CAGOQ,MAAM,6CAAD,OAA6D,QAAfR,EAAA,kBAAkCA,GAAe,KAAMS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAH3I,OAGNC,EAHM,OAIZd,EAASc,EAAKI,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,MAAM0B,cAAcC,SAASjB,EAAWgB,mBAJ9D,gDAMZrC,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBAPA,2DAWO0B,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAXrF,QAWNC,EAXM,OAYZd,EAASc,EAAKI,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,MAAM0B,cAAcC,SAASjB,EAAWgB,mBAZ9D,mDAcZrC,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBAfA,iEAAH,qDA8BrB,OAVAF,qBAAU,WACNC,QAAQC,IAAR,UAAeH,EAAf,aACIyB,EAAagB,QACbhB,EAAagB,SAAU,EAG3Bd,MAED,CAACN,IAGA,sBAAKjB,UAAU,UAAf,UACI,sBAAKC,GAAG,YAAR,UACI,uBAAOqC,KAAK,OAAOrC,GAAG,SAASsC,KAAK,KAAKC,UAAU,IAAIC,aAAa,MAAMC,YAAY,SAASC,SAAU,SAAAC,GAAK,OAAIxB,EAAcwB,EAAMhC,OAAOiC,UAC7I,wBAAQ5C,GAAG,YAAY6C,QAASf,EAAhC,SACI,cAAC,IAAD,CAAiBgB,KAAMC,IAAU/C,GAAG,cAG5C,qBAAKA,GAAG,YAAR,SACI,gCACI,uBAAOgD,QAAQ,SAAf,oCACA,yBAAQN,SAAU,SAAAC,GAAK,OAAI1B,EAAc0B,EAAMhC,OAAOiC,QAAtD,UACI,wBAAQA,MAAM,MAAd,kCACA,wBAAQA,MAAM,KAAd,gCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,oCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,wCCNTK,EA/DE,SAAC,GAAsB,IAApBtD,EAAmB,EAAnBA,aAChB,EAA0BoB,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcpC,EAAd,KACA,EAAgCC,mBAAS,IAAzC,mBAAOrB,EAAP,KAAiByD,EAAjB,KACA,EAA0BpC,mBAAS,IAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KAEMC,EAAU,uCAAG,4BAAA/B,EAAA,+EAEQC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFtF,OAELC,EAFK,OAGXd,EAASc,GAHE,gDAKX/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBAND,yDAAH,qDAUVyD,EAAa,uCAAG,4BAAAhC,EAAA,+EAEKC,MAAM,iDAAiDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFtF,OAERC,EAFQ,OAGduB,EAAYvB,GAHE,gDAKd/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBANE,yDAAH,qDAUb0D,EAAU,uCAAG,4BAAAjC,EAAA,+EAEQC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFtF,OAELC,EAFK,OAGXyB,EAASzB,GAHE,gDAKX/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBAND,yDAAH,qDAkBhB,OARAF,qBAAU,WACN0D,IACAC,IACAC,IACA3D,QAAQC,IAAR,UAAeH,EAAf,gBAED,IAGC,gCACI,oBAAIK,GAAG,YAAP,uBACA,cAAC,EAAD,CAASL,aAAcA,EAAcmB,SAAUA,IAC/C,qBAAKd,GAAG,QAAR,SACKkD,GACGA,EAAMhD,KAAI,SAAAuD,GACN,IAAMC,EAAQhE,EAASsC,QAAO,SAAA7B,GAAG,OAAIA,EAAIwD,SAAWF,EAAEzD,MAChDS,EAAO2C,EAAMpB,QAAO,SAAAvB,GAAI,OAAIA,EAAKT,KAAOyD,EAAEG,UAChD,OAAO,cAAC,EAAD,CAAYpD,MAAOiD,EAAEjD,MAAOF,KAAMmD,EAAEnD,KAAiBN,GAAIyD,EAAEzD,GAAIN,SAAUgE,EAAOjD,KAAMA,EAAMd,aAAcA,GAA3D8D,EAAEzD,aCSjE6D,G,MA5DQ,SAAC,GAAsB,IAAD,EAAnBlE,EAAmB,EAAnBA,aACtB,EAAwBoB,mBAAS,IAAjC,mBAAOkB,EAAP,KAAa6B,EAAb,KACA,EAA8B/C,mBAAS,IAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KACA,EAAwBjD,mBAAS,IAAjC,mBAAON,EAAP,KAAawD,EAAb,KAEQjE,EAAOkE,cAAPlE,GAEFmE,EAAS,uCAAG,4BAAA5C,EAAA,+EAESC,MAAM,8CAAD,OAA+CxB,IAAMyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF7F,OAEJC,EAFI,OAGVkC,EAAQlC,GAHE,gDAKV/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBANF,yDAAH,qDAUTsE,EAAY,uCAAG,4BAAA7C,EAAA,+EAEMC,MAAM,wDAAD,OAAyDxB,IAAMyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFpG,OAEPC,EAFO,OAGboC,EAAWpC,GAHE,gDAKb/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBANC,yDAAH,qDAUZuE,EAAS,uCAAG,8BAAA9C,EAAA,6DACRqC,EAASU,KAAKC,KAAKvE,EAAK,IADhB,kBAGSwB,MAAM,iDAAD,OAAkDoC,IAAUnC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAHpG,OAGJC,EAHI,OAIVqC,EAAQrC,GAJE,gDAMV/B,QAAQgC,MAAR,MACAhC,QAAQC,IAAI,uBAPF,yDAAH,qDAmBf,OARAF,qBAAU,WACNuE,IACAC,IACAC,IACAxE,QAAQC,IAAR,UAAeH,EAAf,sBAED,IAGC,sBAAKI,UAAU,iBAAf,UACI,oBAAIC,GAAG,UAAP,SAAkBiC,EAAKzB,QACvB,sBAAMR,GAAG,SAAT,SAAmBiC,EAAK3B,OACxB,sBAAMN,GAAG,aAAT,mBAAuBS,EAAK,UAA5B,aAAuB,EAASL,OAChC,cAAC,EAAD,CAAgBV,SAAUqE,EAASpE,aAAcA,SCpDvDA,EAAe,aAcN6E,MAZf,WACI,OACI,qBAAKzE,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0E,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACjE,GAAG,aAC9C,cAAC,IAAD,CAAO+D,KAAK,SAASC,QAAS,cAAC,EAAD,CAAU/E,aAAcA,MACtD,cAAC,IAAD,CAAO8E,KAAK,YAAYC,QAAS,cAAC,EAAD,CAAgB/E,aAAcA,YCR/EiF,IAASC,OACL,cAAC,IAAD,CAAYC,SAAUC,qBAAtB,SACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.94a33907.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CommentSection.css\";\r\n\r\nconst CommentSection = ({ comments, propsMessage }) => {\r\n    useEffect(() => {\r\n        console.log(`${propsMessage} CommentSection`);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <h2 id=\"comSectionTitle\">Comments:</h2>\r\n            {comments.length &&\r\n                comments.map(com => {\r\n                    return (\r\n                        <div id=\"comment\" key={com.id}>\r\n                            <h3 id=\"comName\">{com.name}</h3>\r\n                            <span id=\"comEmail\">{com.email}</span>\r\n                            <p id=\"comBody\">{com.body}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentSection.propTypes = {\r\n    comments: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            postId: PropTypes.number,\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            email: PropTypes.string,\r\n            body: PropTypes.string,\r\n        })\r\n    ),\r\n    propsMessage: PropTypes.string,\r\n};\r\n\r\nexport default CommentSection;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentSection from \"../CommentSection/CommentSection\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SinglePost.css\";\r\n\r\nconst SinglePost = ({ title, body, comments, id, user, propsMessage }) => {\r\n    useEffect(() => {\r\n        console.log(`${propsMessage} SinglePost`);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Link to={`/post/${id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"singlePost\">\r\n            <h3 id=\"title\">{title}</h3>\r\n            <span id=\"body\">{body}</span>\r\n            <span id=\"userName\">{user[0]?.name}</span>\r\n            <CommentSection comments={comments} propsMessage={propsMessage} />\r\n        </Link>\r\n    );\r\n};\r\n\r\nSinglePost.propTypes = {\r\n    title: PropTypes.string,\r\n    body: PropTypes.string,\r\n    comments: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            postId: PropTypes.number,\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            email: PropTypes.string,\r\n            body: PropTypes.string,\r\n        })\r\n    ),\r\n    id: PropTypes.number,\r\n    user: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            username: PropTypes.string,\r\n            email: PropTypes.string,\r\n            adress: PropTypes.object,\r\n            phone: PropTypes.string,\r\n            website: PropTypes.string,\r\n            company: PropTypes.object,\r\n        })\r\n    ),\r\n    propsMessage: PropTypes.string,\r\n};\r\n\r\nexport default SinglePost;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Toolbar.css\";\r\n\r\nconst Toolbar = ({ propsMessage, setPosts }) => {\r\n    const [selectedID, setSelectedID] = useState(\"all\");\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const initalRender = useRef(true);\r\n\r\n    const fetchPostByID = async () => {\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/posts${selectedID !== \"all\" ? `?userId=${selectedID}` : \"\"}`).then(response => response.json());\r\n            setPosts(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    const fetchPostByTerm = async () => {\r\n        if (!isNaN(selectedID)) {\r\n            try {\r\n                const data = await fetch(`https://jsonplaceholder.typicode.com/posts${selectedID !== \"all\" ? `?userId=${selectedID}` : \"\"}`).then(response => response.json());\r\n                setPosts(data.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase())));\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.log(\"GET request failed!\");\r\n            }\r\n        } else {\r\n            try {\r\n                const data = await fetch(`https://jsonplaceholder.typicode.com/posts`).then(response => response.json());\r\n                setPosts(data.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase())));\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.log(\"GET request failed!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(`${propsMessage} Toolbar`);\r\n        if (initalRender.current) {\r\n            initalRender.current = false;\r\n            return;\r\n        }\r\n        fetchPostByID();\r\n        // eslint-disable-next-line\r\n    }, [selectedID]);\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <div id=\"searchDiv\">\r\n                <input type=\"text\" id=\"search\" size=\"25\" minLength=\"3\" autoComplete=\"off\" placeholder=\"Search\" onChange={event => setSearchTerm(event.target.value)} />\r\n                <button id=\"searchBtn\" onClick={fetchPostByTerm}>\r\n                    <FontAwesomeIcon icon={faSearch} id=\"icon\" />\r\n                </button>\r\n            </div>\r\n            <div id=\"filterDiv\">\r\n                <div>\r\n                    <label htmlFor=\"filter\">Filter By User's name:</label>\r\n                    <select onChange={event => setSelectedID(event.target.value)}>\r\n                        <option value=\"all\">--Choose an option--</option>\r\n                        <option value=\"10\">Clementina DuBuque</option>\r\n                        <option value=\"9\">Glenna Reichert</option>\r\n                        <option value=\"8\">Nicholas Runolfsdottir</option>\r\n                        <option value=\"7\">Kurtis Weissnat</option>\r\n                        <option value=\"6\">Dennis Schulist</option>\r\n                        <option value=\"5\">Chelsey Dietrich</option>\r\n                        <option value=\"4\">Patricia Lebsack</option>\r\n                        <option value=\"3\">Clementine Bauch</option>\r\n                        <option value=\"2\">Ervin Howell</option>\r\n                        <option value=\"1\">Leanne Graham</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nToolbar.propTypes = {\r\n    propsMessage: PropTypes.string,\r\n    setPosts: PropTypes.func,\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SinglePost from \"../Components/SinglePost/SinglePost\";\r\nimport Toolbar from \"../Components/Toolbar/Toolbar\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HomePage = ({ propsMessage }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const data = await fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json());\r\n            setPosts(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            const data = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(response => response.json());\r\n            setComments(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const data = await fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json());\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n        fetchComments();\r\n        fetchUsers();\r\n        console.log(`${propsMessage} HomePage`);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1 id=\"mainTitle\">Home Page</h1>\r\n            <Toolbar propsMessage={propsMessage} setPosts={setPosts} />\r\n            <div id=\"posts\">\r\n                {posts &&\r\n                    posts.map(e => {\r\n                        const comms = comments.filter(com => com.postId === e.id);\r\n                        const user = users.filter(user => user.id === e.userId);\r\n                        return <SinglePost title={e.title} body={e.body} key={e.id} id={e.id} comments={comms} user={user} propsMessage={propsMessage} />;\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHomePage.propTypes = {\r\n    propsMessage: PropTypes.string,\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport CommentSection from \"../../Components/CommentSection/CommentSection\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SinglePagePost.css\";\r\n\r\nconst SinglePagePost = ({ propsMessage }) => {\r\n    const [post, setPost] = useState([]);\r\n    const [comment, setComment] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`).then(response => response.json());\r\n            setPost(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    const fetchComment = async () => {\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${id}`).then(response => response.json());\r\n            setComment(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    const fetchUser = async () => {\r\n        const userId = Math.ceil(id / 10);\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/users?id=${userId}`).then(response => response.json());\r\n            setUser(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log(\"GET request failed!\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n        fetchComment();\r\n        fetchUser();\r\n        console.log(`${propsMessage} SinglePagePost`);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"singlePagePost\">\r\n            <h3 id=\"titleSP\">{post.title}</h3>\r\n            <span id=\"bodySP\">{post.body}</span>\r\n            <span id=\"userNameSP\">{user[0]?.name}</span>\r\n            <CommentSection comments={comment} propsMessage={propsMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nSinglePagePost.propTypes = {\r\n    propsMessage: PropTypes.string,\r\n};\r\n\r\nexport default SinglePagePost;\r\n","import \"./App.css\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport SinglePagePost from \"./Pages/SinglePagePost/SinglePagePost\";\n\nconst propsMessage = \"Hello From\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Routes>\n                <Route path=\"/\" element={<Navigate replace to=\"/posts\" />} />\n                <Route path=\"/posts\" element={<HomePage propsMessage={propsMessage} />} />\n                <Route path=\"/post/:id\" element={<SinglePagePost propsMessage={propsMessage} />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}